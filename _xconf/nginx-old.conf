user www-data;
worker_processes 1;
pid /run/nginx.pid;

events {
    worker_connections 2048;
    multi_accept on;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    client_max_body_size 2000m;
    types_hash_max_size 2048;
    server_tokens off;
    server_name_in_redirect off;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    log_format access '$http_x_forwarded_for $remote_user [$time_local] '
                    '"$host" "$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';

    access_log /var/log/nginx/access.log access;
    error_log /var/log/nginx/error.log;

    #fastcgi_cache_path /var/run/nginx-cache levels=1:2 keys_zone=WORDPRESS:100m inactive=60m; # cgi-cache conf
    #fastcgi_cache_key "$scheme$request_method$host$request_uri";                              # cgi-cache conf
    #fastcgi_cache_use_stale error timeout invalid_header http_500;                            # cgi-cache conf
    #fastcgi_ignore_headers Cache-Control Expires Set-Cookie;                                  # cgi-cache conf

    server {
        listen 80 default_server;
        root /app/www;
        index index.php index.html index.htm;
        set_real_ip_from 127.0.0.1;
        real_ip_header X-Forwarded-For;

        #if ($http_x_forwarded_proto = 'http') { rewrite ^/(.*)$ https://$host/$1 permanent; } # generated https redirect

        #include /etc/nginx/rocket-nginx.conf;                                       # rocket-cache conf

        #set $skip_cache 0;                                                           # cgi-cache conf
        #set $skip_cache_header "ON";                                                 # cgi-cache conf
        # POST requests and urls with a query string should always go to PHP
        #if ($request_method = POST) {                                                # cgi-cache conf
        #    set $skip_cache 1;                                                       # cgi-cache conf
        #    set $skip_cache_header "OFF";                                            # cgi-cache conf
        #}                                                                            # cgi-cache conf
        #if ($query_string != "") {                                                   # cgi-cache conf
        #    set $skip_cache 1;                                                       # cgi-cache conf
        #    set $skip_cache_header "OFF";                                            # cgi-cache conf
        #}                                                                            # cgi-cache conf
        # Don't cache uris containing the following segments
        #if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml") {                  # cgi-cache conf
        #    set $skip_cache 1;                                                       # cgi-cache conf
        #    set $skip_cache_header "OFF";                                            # cgi-cache conf
        #}                                                                            # cgi-cache conf
        # Don't use the cache for logged in users or recent commenters
        #if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {   # cgi-cache conf
        #    set $skip_cache 1;                                                       # cgi-cache conf
        #    set $skip_cache_header "OFF";                                            # cgi-cache conf
        #}                                                                            # cgi-cache conf

        location / {
            try_files $uri $uri/ /index.php?$args;
        }

        location ~ /\. {
            deny all;
        }

        location ~* /(?:uploads|files)/.*\.php$ {
            deny all;
        }

        rewrite /wp-admin$ $scheme://$host$uri/ permanent;

        location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf|css|js|webp)$ {
            #include trial_redirect.conf;
            access_log off;
            log_not_found off;
            expires max;
            add_header Cache-Control "public, max-age=864000";
        }

        location ~ ^/_tc/ {
            root /php;
            access_log /var/log/nginx/tc-access.log access;
            error_log /var/log/nginx/tc-error.log;
            include fastcgi_params;
            fastcgi_pass unix:/var/run/php-fpm-tc.sock;
            fastcgi_split_path_info ^(.+\.php)(.*)$;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param SERVER_NAME $host;
            fastcgi_read_timeout 180s;
            set $https_on off;
            set $http_scheme http;
            if ($http_x_forwarded_proto = "https") {
                set $https_on on;
                set $http_scheme https;
            }
            fastcgi_param HTTPS $https_on;
            fastcgi_param HTTP_SCHEME $http_scheme;
        }

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        location ~ "^(.+\.php)($|/)" {
            #include trial_redirect.conf;
            #add_header X-cgi-cache $skip_cache_header;                               # cgi-cache conf

            fastcgi_pass unix:/var/run/php-fpm.sock;
            include fastcgi_params;
            fastcgi_split_path_info ^(.+\.php)(.*)$;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param SCRIPT_NAME $fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param SERVER_NAME $host;
            fastcgi_read_timeout 180s;
            set $https_on off;
            set $http_scheme http;
            if ($http_x_forwarded_proto = "https") {
                set $https_on on;
                set $http_scheme https;
            }
            fastcgi_param HTTPS $https_on;
            fastcgi_param HTTP_SCHEME $http_scheme;

            #fastcgi_cache_bypass $skip_cache;                                        # cgi-cache conf
            #fastcgi_no_cache $skip_cache;                                            # cgi-cache conf

            #fastcgi_cache WORDPRESS;                                                 # cgi-cache conf
            #fastcgi_cache_valid  60m;                                                # cgi-cache conf
        }

        #location ~ /purge(/.*) {                                                     # cgi-cache conf
        #    fastcgi_cache_purge WORDPRESS "$scheme$request_method$host$1";           # cgi-cache conf
        #}                                                                            # cgi-cache conf

        location ~* \.(ttf|ttc|otf|eot|svg|woff|woff2)$ {
            add_header Access-Control-Allow-Origin *;
        }
    }
}

